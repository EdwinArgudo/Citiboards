{"version":3,"sources":["components/user/Home.js","components/user/Profile.js","components/user/Login.js","components/user/Register.js","components/user/withAuth.js","components/user/LogOut.js","components/user/Nav.js","components/admin/Login.js","components/admin/StationSimulator.js","components/admin/ControlPanel.js","components/admin/StationPin.js","components/admin/StationInfo.js","components/admin/HistoricalReport.js","components/admin/Reports.js","components/admin/PeekDatabase.js","components/admin/withAdminAuth.js","components/admin/Panel.js","components/admin/LogOut.js","AdminApp.js","App.js","serviceWorker.js","index.js"],"names":["Home","class","href","role","Component","Profile","state","username","email","first_name","last_name","phone_number","payment_info","axios","get","then","res","data","setState","credit_card","catch","e","console","log","for","type","placeholder","this","readonly","to","Login","props","handleInputChange","event","target","value","name","onSubmit","preventDefault","post","password","Error","redirect","err","error","alert","message","onChange","required","Register","withAuth","ComponentToProtect","LogOut","Nav","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","StationSimulator","stationID","boardID","boardStatus","userID","getInventoryData","stationInventory","onLoadRandomData","data-dismiss","mappedStationsInventory","map","station","key","station_id","scope","count","defaultContainer","children","className","ControlPanel","Container","containerComponent","report","entry","start","end","STATIONS","PureComponent","pinStyle","cursor","fill","stroke","StationPin","size","onClick","height","viewBox","style","transform","d","StationInfo","info","site","city","width","src","image","HistoricalReport","renderCityMarker","index","longitude","latitude","popupInfo","updateData","url","coords","i","length","start_coord","end_coord","push","geometry","coordinates","raw","viewport","zoom","tipSize","anchor","closeOnClick","onClose","prevProps","mapStyle","accessToken","onViewportChange","source","layout","paint","renderPopup","Reports","generateReports","getHistoricalReport","HRboardID_submit","HRboardID","historical","stationRebalancing","missingBoards","historicalReport","rebalanceStations","markMissingBoards","PeekDatabase","getData","usersData","stationsData","boardsData","mappedUsersData","row","user_id","mappedStationsData","location","capacity","mappedBoardsData","board_id","board_status","last_transaction_date","last_transaction_time","Panel","match","path","component","withAdminAuth","AdminApp","exact","App","AuthProfile","AuthLogout","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76827218.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class Home extends Component {\n\n    render() {\n        return (\n            <div class=\"jumbotron\">\n                <h1 class=\"display-3\">Citiboard is ...</h1>\n                <p class=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n                <hr class=\"my-4\"/>\n                <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                <p class=\"lead\">\n                    <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\n                </p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios'\n\nexport default class Profile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            email: '',\n            first_name: '',\n            last_name: '',\n            phone_number: '',\n            payment_info: ''\n        }\n    }\n    componentDidMount() {\n        axios.get('/api/v1/user/profile')\n        .then(res => {\n            const data = res['data']\n            this.setState({\n                username: data.username,\n                email: data.email,\n                first_name: data.first_name,\n                last_name: data.last_name,\n                phone_number: data.phone_number,\n                credit_card: data.credit_card\n            })\n        })\n        .catch(e => console.log(e))\n    }\n    render() {\n        return (\n            <div class=\"jumbotron\">\n                <h1 class=\"display-3\">User Profile</h1>\n                    <div class=\"form-group\">\n                    <fieldset>\n                        <label class=\"control-label\" for=\"readOnlyInput\">Username</label>\n                        <input class=\"form-control\" type=\"text\" placeholder={this.state.username} readonly=\"\" />\n                    </fieldset>\n                    <fieldset>\n                        <label class=\"control-label\" for=\"readOnlyInput\">Email</label>\n                        <input class=\"form-control\" type=\"text\" placeholder={this.state.email} readonly=\"\" />\n                    </fieldset>\n                    <fieldset>\n                        <label class=\"control-label\" for=\"readOnlyInput\">First Name</label>\n                        <input class=\"form-control\" type=\"text\" placeholder={this.state.first_name} readonly=\"\" />\n                    </fieldset>\n                    <fieldset>\n                        <label class=\"control-label\" for=\"readOnlyInput\">Last Name</label>\n                        <input class=\"form-control\" type=\"text\" placeholder={this.state.last_name} readonly=\"\" />\n                    </fieldset>\n                    <fieldset>\n                        <label class=\"control-label\" for=\"readOnlyInput\">Phone Number</label>\n                        <input class=\"form-control\" type=\"text\" placeholder={this.state.phone_number} readonly=\"\" />\n                    </fieldset>\n                    <fieldset>\n                        <label class=\"control-label\" for=\"readOnlyInput\">Payment Info</label>\n                        <input class=\"form-control\" type=\"text\" placeholder={this.state.credit_card} readonly=\"\" />\n                    </fieldset>\n                </div>\n                <p class=\"lead\">\n                    <Link to=\"/logout\"><a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Log Out</a></Link>\n                </p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username : '',\n      password: '',\n      redirect: false\n    };\n  }\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n  onSubmit = (event) => {\n      event.preventDefault();\n      axios.post('/api/v1/user/authenticate', {\n          username: this.state.username,\n          password: this.state.password\n      })\n      .then(res => {\n        if (res['data']['error']) {\n            const error = new Error(res['data']['error']);\n            throw error;\n        } else {\n            this.setState({ redirect: true })\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        alert(err.message);\n      });\n    }\n  render() {\n    if(this.state.redirect){\n        return ( <Redirect to=\"/profile\"/> );\n    }\n    return (\n        <div class=\"jumbotron\">\n            <h1 class=\"display-3\">Login</h1>\n            <form onSubmit={this.onSubmit}>\n              <fieldset>\n                <div class=\"form-group\">\n                  <label>Username</label>\n                  <input type=\"username\"\n                      class=\"form-control\"\n                      name=\"username\"\n                      placeholder=\"Enter Username\"\n                      value={this.state.username}\n                      onChange={this.handleInputChange}\n                      required />\n                </div>\n                <div class=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Enter Password\"\n                      value={this.state.password}\n                      onChange={this.handleInputChange}\n                      required\n                      class=\"form-control\"  />\n                </div>\n                <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\"/>\n              </fieldset>\n            </form>\n          </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username : '',\n            password: '',\n            first_name: '',\n            last_name: '',\n            email: '',\n            phone_number: '',\n            credit_card: ''\n        };\n    }\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    onSubmit = (event) => {\n        event.preventDefault();\n        axios.post('/api/v1/user/register', {\n            username : this.state.username,\n            password: this.state.password,\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n            credit_card: this.state.credit_card\n        })\n        .then(res => {\n            if (res['data']['error']) {\n                const error = new Error(res['data']['error']);\n                throw error;\n            } else {\n                this.setState({ redirect: true })\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error registering please try again');\n        });\n    }\n    render() {\n        if(this.state.redirect){\n            return ( <Redirect to=\"/profile\"/> );\n        }\n        return (\n            <div class=\"jumbotron\">\n                <h1 class=\"display-3\">Register</h1>\n                <form onSubmit={this.onSubmit}>\n                    <fieldset>\n                        <div class=\"form-group\">\n                            <label>Email address</label>\n                            <input type=\"username\"\n                            class=\"form-control\"\n                            name=\"username\"\n                            placeholder=\"Enter Username\"\n                            value={this.state.username}\n                            onChange={this.handleInputChange}\n                            required />\n                            <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Password</label>\n                            <input\n                            type=\"password\"\n                            class=\"form-control\"\n                            name=\"password\"\n                            placeholder=\"Enter Password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            required\n                            class=\"form-control\"  />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>First Name</label>\n                            <input\n                            type=\"first_name\"\n                            class=\"form-control\"\n                            name=\"first_name\"\n                            placeholder=\"Enter First Name\"\n                            value={this.state.first_name}\n                            onChange={this.handleInputChange}\n                            required />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Last Name</label>\n                            <input\n                            type=\"last_name\"\n                            name=\"last_name\"\n                            class=\"form-control\"\n                            placeholder=\"Enter Last Name\"\n                            value={this.state.last_name}\n                            onChange={this.handleInputChange}\n                            required  />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Email</label>\n                            <input\n                            type=\"email\"\n                            name=\"email\"\n                            class=\"form-control\"\n                            placeholder=\"Enter Email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                            required  />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Phone Number</label>\n                            <input\n                            type=\"phone_number\"\n                            name=\"phone_number\"\n                            class=\"form-control\"\n                            placeholder=\"Enter Phone Number\"\n                            value={this.state.phone_number}\n                            onChange={this.handleInputChange}\n                            required />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Credit Card</label>\n                            <input\n                            type=\"credit_card\"\n                            name=\"credit_card\"\n                            class=\"form-control\"\n                            placeholder=\"Enter Credit Card\"\n                            value={this.state.credit_card}\n                            onChange={this.handleInputChange}\n                            required />\n                        </div>\n                        <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\"/>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'\n\nexport default function withAuth(ComponentToProtect) {\n    return class extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                redirect: false\n            };\n        }\n\n        componentDidMount(){\n            axios.get('/api/v1/user/checkSession')\n            .catch(err => {\n                console.error(err);\n                this.setState({ redirect: true });\n            });\n        }\n\n        render() {\n            if (this.state.redirect) {\n                return <Redirect to=\"/login\" />;\n            }\n            return <ComponentToProtect {...this.props} />;\n        }\n    }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'\n\nexport default class LogOut extends Component {\n    componentDidMount() {\n        axios.get('/api/v1/user/logout')\n    }\n    render() {\n        return (<Redirect to=\"/login\" />);\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\n\nexport default class Nav extends Component {\n\n    render() {\n        return (\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <Link to=\"/\"><a class=\"navbar-brand\" href=\"#\">CitiBoard</a></Link>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n                    <ul class=\"navbar-nav mr-auto\">\n                        <li class=\"nav-item active\">\n                        <Link to=\"/\"><a class=\"nav-link\" href=\"#\">Home<span class=\"sr-only\">(current)</span></a></Link>\n                        </li>\n                        <li class=\"nav-item\">\n                        <Link to=\"/login\"><a class=\"nav-link\" href=\"#\">Login</a></Link>\n                        </li>\n                        <li class=\"nav-item\">\n                        <Link to=\"/register\"><a class=\"nav-link\" href=\"#\">Register</a></Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username : '',\n            password: '',\n            redirect: false\n        };\n    }\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    onSubmit = (event) => {\n        event.preventDefault();\n        axios.post('/api/v1/admin/authenticate', {\n            username: this.state.username,\n            password: this.state.password\n        })\n        .then(res => {\n            if (res['data']['error']) {\n                const error = new Error(res['data']['error']);\n                throw error;\n            } else {\n                this.setState({ redirect: true })\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            alert(err.message);\n        });\n    }\n    render() {\n        if(this.state.redirect){\n            return ( <Redirect to=\"/admin/panel\" /> );\n        }\n        return (\n            <div class=\"jumbotron\">\n            <h1 class=\"display-3\">Login</h1>\n            <form onSubmit={this.onSubmit}>\n            <fieldset>\n            <div class=\"form-group\">\n            <label>Username</label>\n            <input type=\"username\"\n            class=\"form-control\"\n            name=\"username\"\n            placeholder=\"Enter Username\"\n            value={this.state.username}\n            onChange={this.handleInputChange}\n            required />\n            </div>\n            <div class=\"form-group\">\n            <label>Password</label>\n            <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter Password\"\n            value={this.state.password}\n            onChange={this.handleInputChange}\n            required\n            class=\"form-control\" />\n            </div>\n            <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\"/>\n            </fieldset>\n            </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios'\n\nexport default class StationSimulator extends Component {\n    constructor() {\n        super();\n        this.state = {\n            stationID: '' ,\n            boardID: '',\n            boardStatus: '',\n            userID: '',\n            stationInventory: [],\n            message: '',\n            alert: ''\n            // ,\n            // stations_table: [],\n            // boards_table: [],\n            // boards_stations_table:[]\n        }\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        axios.post('/api/v1/admin/station-simulator', {\n            stationID: this.state.stationID,\n            boardID: this.state.boardID,\n            boardStatus: this.state.boardStatus,\n            userID: this.state.userID\n        })\n        .then(res => {\n            if (res['data']['error']) {\n                this.setState({\n                    message: res['data']['error'],\n                    alert: 'bad'\n                });\n                const error = new Error(res['data']['error']);\n                throw error;\n            } else {\n                console.log(\"insertion worked!\")\n                this.setState({\n                    stationID: '',\n                    boardID: '',\n                    boardStatus: '',\n                    userID: '',\n                    message: 'Update entered',\n                    alert: 'good'\n                });\n                this.getInventoryData()\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            //alert(err.message);\n            this.setState({\n                message: err.message,\n                alert: 'bad'\n            });\n        });\n    }\n\n    getInventoryData = () => {\n        axios.get('/api/v1/admin/inventory')\n        .then(res => {\n            console.log(res)\n            if (res['data']['error']) {\n                this.setState({\n                    message: res['data']['error'],\n                    alert: 'bad'\n                });\n                const error = new Error(res['data']['error']);\n                throw error;\n            } else {\n                this.setState({\n                    stationInventory: res['data']['stations_data']\n                })\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            //alert(err.message);\n            this.setState({\n                message: err.message,\n                alert: 'bad'\n            });\n        });\n    }\n\n    onLoadRandomData = (event) => {\n        event.preventDefault();\n        this.setState({\n            message: \"Loading...\",\n            alert: 'good'\n        });\n        axios.post('/api/v1/admin/load-data')\n            .then(res => {\n                this.getInventoryData()\n                console.log(res)\n                if (res['data']['error']) {\n                    this.setState({\n                        message: res['data']['error'],\n                        alert: 'bad'\n                    });\n                    const error = new Error(res['data']['error']);\n                    throw error;\n                } else {\n                    this.setState({\n                        message: \"Random Data Loaded!\",\n                        alert: 'good'\n                    });\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                //alert(err.message);\n                this.setState({\n                    message: err.message,\n                    alert: 'bad'\n                });\n            });\n    }\n\n    componentDidMount(){\n        this.getInventoryData()\n    }\n\n    render() {\n        let message = \"\"\n        if(this.state.message !== \"\"){\n            message = (\n                 <div class={`alert alert-dismissible alert-${ this.state.alert === \"good\" ? \"success\" : \"warning\"}`}>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n                    <h4 class=\"alert-heading\">{ this.state.alert === \"good\" ? \"Success!\" : \"Error!\"}</h4>\n                    <p class=\"mb-0\"> { this.state.message }</p>\n                </div>\n            )\n        }\n\n        const mappedStationsInventory = this.state.stationInventory.map((station) =>\n                <tr class=\"table-info\" key={station.station_id}>\n                    <th scope=\"row\">{station.station_id}</th>\n                    <td>{station.count}</td>\n                </tr>\n        )\n\n        return (\n            <div class=\"container-fluid mt-3 mb-3\">\n            { message }\n                <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                        <h1 class=\"display-5\">Station Simulator</h1>\n                        <form onSubmit={this.onSubmit}>\n                            <fieldset>\n                                <b>UPDATE:</b>\n                                <div class=\"form-group\">\n                                    <label>Board</label>\n                                    <input\n                                    type=\"boardID\"\n                                    class=\"form-control\"\n                                    name=\"boardID\"\n                                    placeholder=\"Enter BoardID\"\n                                    value={this.state.boardID}\n                                    onChange={this.handleInputChange}\n                                    required />\n                                </div>\n                                <b>AT</b>\n                                <div class=\"form-group\">\n                                    <label>Station</label>\n                                    <input\n                                    type=\"stationID\"\n                                    name=\"stationID\"\n                                    placeholder=\"Enter StationID \"\n                                    value={this.state.stationID}\n                                    onChange={this.handleInputChange}\n                                    class=\"form-control\"  />\n                                </div>\n                                <b>WITH</b>\n                                <div class=\"form-group\">\n                                    <label>Board Status</label>\n                                    <input\n                                    type=\"boardStatus\"\n                                    name=\"boardStatus\"\n                                    placeholder=\"Enter Board Status ('in_use' or 'parked') \"\n                                    value={this.state.boardStatus}\n                                    onChange={this.handleInputChange}\n                                    required\n                                    class=\"form-control\"  />\n                                </div>\n                                <b>BY</b>\n                                <div class=\"form-group\">\n                                    <label>User</label>\n                                    <input\n                                    type=\"userID\"\n                                    name=\"userID\"\n                                    placeholder=\"Enter UserID \"\n                                    value={this.state.userID}\n                                    onChange={this.handleInputChange}\n                                    required\n                                    class=\"form-control\"  />\n                                </div>\n                                <input type=\"submit\" value=\"Simulate Board Movement\" class=\"btn btn-primary\"/>\n                            </fieldset>\n                        </form>\n                    </div>\n                    <div class=\"col-lg-4 offset-lg-1\">\n                        <h1 class=\"display-5\">Live Inventory</h1>\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Station ID</th>\n                                    <th scope=\"col\">Count</th>\n                                </tr>\n                            </thead>\n                            { mappedStationsInventory }\n                        </table>\n                        <form onSubmit={this.onLoadRandomData}>\n                            <input type=\"submit\" value=\"Load Random Data\" class=\"btn btn-success\"/>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {PureComponent} from 'react';\nimport STATIONS from '../../JSON/stations.json';\n\nconst defaultContainer = ({children}) => <div className=\"control-panel\">{children}</div>;\n\nexport default class ControlPanel extends PureComponent {\n\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        const Container = this.props.containerComponent || defaultContainer;\n        console.log(this.props.data)\n        const report = this.props.data.map((entry) => {\n            let start = entry['s_start'] - 1\n            let end = entry['s_end'] - 1\n\n            return (\n                <div>\n                    <p>\n                        <b>{`On ${entry['date']}, ${entry['time']}:`}</b>\n                        <br />\n                        {`Travelled Between ${STATIONS[start]['site']} and ${STATIONS[end]['site']} in ${entry['duration']} mins`}\n                    </p>\n                </div>\n            )\n        })\n\n        return (\n            <Container>\n                <h3>Historical Report of Board { this.props.boardID }</h3>\n                {report}\n            </Container>\n        );\n    }\n}\n","import React, {PureComponent} from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\nc0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\nC20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n    cursor: 'pointer',\n    fill: '#d00',\n    stroke: 'none'\n};\n\nexport default class StationPin extends PureComponent {\n    render() {\n        const {size = 20, onClick} = this.props;\n\n        return (\n            <svg\n            height={size}\n            viewBox=\"0 0 24 24\"\n            style={{\n                ...pinStyle,\n                transform: `translate(${-size / 2}px,${-size}px)`\n            }}\n            onClick={onClick}\n            >\n                <path d={ICON} />\n            </svg>\n        );\n    }\n}\n","import React, {PureComponent} from 'react';\n\nexport default class StationInfo extends PureComponent {\n    render() {\n        const {info} = this.props;\n\n        return (\n            <div>\n                <div>\n                    <p>\n                        <b>{info.site}</b>, {info.city}\n                    </p>\n                </div>\n                <img width={200} src={info.image} />\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MapGL, { Source, Layer, Marker, Popup } from '@urbica/react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport ControlPanel from './ControlPanel';\nimport StationPin from './StationPin';\nimport StationInfo from './StationInfo';\nimport STATIONS from '../../JSON/stations.json';\nimport axios from 'axios'\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst API_KEY = 'pk.eyJ1IjoiZWExNjc2IiwiYSI6ImNrM3hlN2xrZTBqdGszcnBpOXdjZmx1bGEifQ.QkOBRb_HcEVdnanOECp_jA';\n\nexport default class HistoricalReport extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            viewport: {\n                latitude: 40.7450,\n                longitude: -73.9712,\n                zoom: 12,\n            },\n            popupInfo: null,\n            data: {\n                type: 'Feature',\n                geometry: {\n                    type: 'LineString',\n                    coordinates: []\n                }\n            },\n            raw: []\n        }\n    }\n\n    renderCityMarker = (site, index) => {\n        return (\n            <Marker key={index} longitude={site.longitude} latitude={site.latitude}>\n                <StationPin size={20} onClick={() => this.setState({ popupInfo: site })} />\n            </Marker>\n        );\n    };\n    renderPopup() {\n        const { popupInfo } = this.state;\n\n        return (\n            popupInfo && (\n                <Popup\n                tipSize={5}\n                anchor=\"top\"\n                longitude={popupInfo.longitude}\n                latitude={popupInfo.latitude}\n                closeOnClick={false}\n                onClose={() => this.setState({ popupInfo: null })}\n                >\n                <StationInfo info={popupInfo} />\n                </Popup>\n            )\n        );\n    }\n\n    updateData = () => {\n        const url = `/api/v1/admin/historical-reports/${this.props.boardID}`\n        console.log(url)\n        axios.get(url)\n        .then(res => {\n            console.log(res)\n            const data = res['data']['data']\n            const coords = []\n\n            for(let i = 0; i < data.length; i++){\n                let d = data[i]\n                let start = d['s_start'] - 1\n                let end = d['s_end'] - 1\n                if(start !== end){\n                    let start_coord = [STATIONS[start]['longitude'], STATIONS[start]['latitude']]\n                    let end_coord = [STATIONS[end]['longitude'], STATIONS[end]['latitude']]\n                    coords.push(start_coord)\n                    coords.push(end_coord)\n                }\n            }\n\n            console.log(this)\n            this.setState({\n                data: {\n                    type: 'Feature',\n                    geometry: {\n                        type: 'LineString',\n                        coordinates: coords\n                    }\n                },\n                raw: data\n            })\n        })\n    }\n\n    componentDidMount(){\n        this.updateData()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.boardID !== prevProps.boardID) {\n            this.updateData()\n        }\n    }\n\n    render(){\n        return (\n            <MapGL\n            style={{ width: '100%', height: '800px' }}\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            accessToken={API_KEY}\n            onViewportChange={(viewport) => this.setState({ viewport })}\n            {...this.state.viewport}\n            >\n                <Source id=\"route\" type=\"geojson\" data={this.state.data} />\n                <Layer\n                id=\"route\"\n                type=\"line\"\n                source=\"route\"\n                layout={{\n                    'line-join': 'round',\n                    'line-cap': 'round'\n                }}\n                paint={{\n                    'line-color': '#FF5733',\n                    'line-width': 8\n                }}\n                />\n                {STATIONS.map(this.renderCityMarker)}\n\n                {this.renderPopup()}\n                <ControlPanel\n                    containerComponent={this.props.containerComponent}\n                    boardID={this.props.boardID}\n                    data={this.state.raw}\n                />\n            </MapGL>);\n        }\n    }\n","import React, { Component } from 'react'\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios'\nimport StationSimulator from './StationSimulator'\nimport HistoricalReport from './HistoricalReport'\n\nexport default class Reports extends Component {\n    constructor() {\n        super();\n        this.state = {\n            message: '',\n            alert: '',\n            historical:[],\n            stationRebalancing: [],\n            missingBoards:[],\n            HRboardID: '',\n            HRboardID_submit: ''\n        }\n    }\n    componentDidMount() {\n\n    }\n\n    handleInputChange = (event) => {\n      const { value, name } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    generateReports = (event) => {\n        event.preventDefault();\n        axios.get('/api/v1/admin/generate-reports')\n        .then(res => {\n            console.log(res)\n            if (res['data']['error']) {\n                this.setState({\n                    message: res['data']['error'],\n                    alert: 'bad'\n                });\n                const error = new Error(res['data']['error']);\n                throw error;\n            } else {\n                this.setState({\n                    message: \"Reports Generated!\",\n                    alert: 'good'\n                })\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            //alert(err.message);\n            this.setState({\n                message: err.message,\n                alert: 'bad'\n            });\n        });\n    }\n\n    getHistoricalReport = (event) => {\n        event.preventDefault();\n        this.setState({\n            HRboardID_submit: this.state.HRboardID\n        })\n    }\n\n    render() {\n        let message = \"\"\n        if(this.state.message !== \"\"){\n            message = (\n                 <div class={`alert alert-dismissible alert-${ this.state.alert === \"good\" ? \"success\" : \"warning\"}`}>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n                    <h4 class=\"alert-heading\">{ this.state.alert === \"good\" ? \"Success!\" : \"Error!\"}</h4>\n                    <p class=\"mb-0\"> { this.state.message }</p>\n                </div>\n            )\n        }\n\n        let historicalReport = this.state.HRboardID_submit !== '' ? <HistoricalReport boardID={this.state.HRboardID_submit}/> : null\n        return (\n            <div class=\"container-fluid mt-3 mb-3\">\n                <h1 class=\"display-5\">Reports</h1>\n                { message }\n                <form onSubmit={this.generateReports}>\n                    <p class=\"lead\">\n                        <input type=\"submit\" class=\"btn btn-success\" value=\"Generate Reports\"/>\n                    </p>\n                </form>\n                <hr class=\"my-4\"/>\n                <div class=\"card bg-light mb-3\">\n                    <div class=\"card-header\">Historical Report</div>\n                    <div class=\"card-body\">\n                        <form onSubmit={this.getHistoricalReport}>\n                            <div class=\"form-group\">\n                                <input\n                                    name=\"HRboardID\"\n                                    placeholder=\"Enter Board ID\"\n                                    value={this.state.HRboardID}\n                                    onChange={this.handleInputChange}\n                                    required\n                                    class=\"form-control col-md-2\"  />\n                            </div>\n                            <p class=\"lead\">\n                                <input type=\"submit\" class=\"btn btn-info\" value=\"Get Historical Report\"/>\n                            </p>\n                        </form>\n                        <hr class=\"my-4\"/>\n                        {historicalReport}\n                    </div>\n                </div>\n                <div class=\"card bg-light mb-3\">\n                    <div class=\"card-header\">Station Rebalancing Report</div>\n                    <div class=\"card-body\">\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                        <form onSubmit={this.rebalanceStations}>\n                            <p class=\"lead\">\n                                <input type=\"submit\" class=\"btn btn-info\" value=\"Rebalance Stations\"/>\n                            </p>\n                        </form>\n                    </div>\n                </div>\n                <div class=\"card bg-light mb-3\">\n                    <div class=\"card-header\">Missing Boards Report</div>\n                    <div class=\"card-body\">\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                        <form onSubmit={this.markMissingBoards}>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n// <p class=\"lead\">\n//     <input type=\"submit\" class=\"btn btn-success\" value=\"\"/>\n// </p>\n","import React, { Component } from 'react'\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios'\n\nexport default class PeekDatabase extends Component {\n    constructor() {\n        super();\n        this.state = {\n            usersData: [],\n            stationsData: [],\n            boardsData:[],\n            message: '',\n            alert: ''\n        }\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.getData();\n    }\n\n    getData = () => {\n        axios.get('/api/v1/admin/peek-database')\n        .then(res => {\n            if (res['data']['error']) {\n                this.setState({\n                    message: res['data']['error'],\n                    alert: 'bad'\n                });\n                const error = new Error(res['data']['error']);\n                throw error;\n            } else {\n                console.log(\"refresh worked!\")\n                console.log(res['data'])\n                this.setState({\n                    usersData: res['data']['users_data'],\n                    stationsData: res['data']['stations_data'],\n                    boardsData: res['data']['boards_data'],\n                    message: 'Data Retrieved',\n                    alert: 'good'\n                });\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            this.setState({\n                message: err.message,\n                alert: 'bad'\n            });\n        });\n    }\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    render() {\n\n        const mappedUsersData = this.state.usersData.map((row) =>\n            <tr class=\"table-info\" key={row.user_id}>\n                <th scope=\"row\">{row.user_id}</th>\n                <td>{row.first_name}</td>\n                <td>{row.last_name}</td>\n                <td>{row.email}</td>\n                <td>{row.phone_number}</td>\n                <td>{row.credit_card}</td>\n            </tr>\n        );\n\n        const mappedStationsData = this.state.stationsData.map((row) =>\n            <tr class=\"table-info\" key={row.station_id}>\n                <th scope=\"row\">{row.station_id}</th>\n                <td>{row.location}</td>\n                <td>{row.capacity}</td>\n            </tr>\n        );\n\n        const mappedBoardsData = this.state.boardsData.map((row) =>\n            <tr class=\"table-info\" key={row.board_id}>\n                <th scope=\"row\">{row.board_id}</th>\n                <td>{row.station_id}</td>\n                <td>{row.user_id}</td>\n                <td>{row.board_status}</td>\n                <td>{row.last_transaction_date}</td>\n                <td>{row.last_transaction_time}</td>\n            </tr>\n        );\n\n        let message = \"\"\n        if(this.state.message !== \"\"){\n            message = (\n                 <div class={`alert alert-dismissible alert-${ this.state.alert === \"good\" ? \"success\" : \"warning\"}`}>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n                    <h4 class=\"alert-heading\">{ this.state.alert === \"good\" ? \"Success!\" : \"Error!\"}</h4>\n                    <p class=\"mb-0\"> { this.state.message }</p>\n                </div>\n            )\n        }\n        return (\n            <div class=\"container-fluid mt-3 mb-3\">\n                <h1 class=\"display-5\">Peek at Database</h1>\n                { message }\n                <form onSubmit={this.onSubmit}>\n                    <fieldset>\n                        <input type=\"submit\" value=\"Refresh Data\" class=\"btn btn-success\"/>\n                    </fieldset>\n                    <br />\n                    <div>\n                        <h4>Users Table</h4>\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">User ID</th>\n                                    <th scope=\"col\">First Name</th>\n                                    <th scope=\"col\">Last Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Phone Number</th>\n                                    <th scope=\"col\">Credit Card</th>\n                                </tr>\n                            </thead>\n                            { mappedUsersData }\n                        </table>\n                    </div>\n                    <div>\n                        <h4>Stations Table</h4>\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Station ID</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\">Capacity</th>\n                                </tr>\n                            </thead>\n                            { mappedStationsData }\n                        </table>\n                    </div>\n                    <div>\n                        <h4>Board Table</h4>\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Board ID</th>\n                                    <th scope=\"col\">Station ID</th>\n                                    <th scope=\"col\">User ID</th>\n                                    <th scope=\"col\">Board Status</th>\n                                    <th scope=\"col\">Last Transaction Date</th>\n                                    <th scope=\"col\">Last Transaction Time</th>\n                                </tr>\n                            </thead>\n                            { mappedBoardsData }\n                        </table>\n                    </div>\n                </form>\n\n\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'\n\nexport default function withAuth(ComponentToProtect) {\n    return class extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                redirect: false\n            };\n        }\n\n        componentDidMount(){\n            axios.get('/api/v1/admin/checkSession')\n            .catch(err => {\n                console.error(err);\n                this.setState({ redirect: true });\n            });\n        }\n\n        render() {\n            if (this.state.redirect) {\n                return <Redirect to=\"/admin\" />;\n            }\n            return <ComponentToProtect {...this.props} />;\n        }\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios'\nimport Reports from './Reports'\nimport StationSimulator from './StationSimulator'\nimport PeekDatabase from './PeekDatabase'\nimport withAdminAuth from './withAdminAuth';\n\nexport default class Panel extends Component {\n    constructor() {\n        super();\n        // this.state = {\n        //     username: '',\n        //     email: '',\n        //     first_name: '',\n        //     last_name: '',\n        //     phone_number: '',\n        //     payment_info: ''\n        // }\n    }\n    componentDidMount() {\n        // axios.get('/api/v1/user/profile')\n        // .then(res => {\n        //     console.log(res, \"***\")\n        //     return res\n        // })\n        // .then(res => {\n        //     const data = res['data']\n        //     this.setState({\n        //         username: data.username,\n        //         email: data.email,\n        //         first_name: data.first_name,\n        //         last_name: data.last_name,\n        //         phone_number: data.phone_number,\n        //         credit_card: data.credit_card\n        //     })\n        // })\n        // .catch(e => console.log(e))\n    }\n    render() {\n        return (\n            <BrowserRouter>\n                <div class=\"jumbotron\">\n                    <h1 class=\"display-3\">Control Panel</h1>\n                    <div class=\"container mt-3\">\n                        <Link to={`${this.props.match.url}/reports`}><a class=\"nav-link\" href=\"#\">Reports</a></Link>\n                        <Link to={`${this.props.match.url}/station-simulator`}><a class=\"nav-link\" href=\"#\">Station Simulator</a></Link>\n                        <Link to={`${this.props.match.url}/peek-database`}><a class=\"nav-link\" href=\"#\">Peek at Database</a></Link>\n                        <hr class=\"my-4\"/>\n                        <Switch>\n                            <Route path={`${this.props.match.path}/reports`} component={withAdminAuth(Reports)} />\n                            <Route path={`${this.props.match.path}/station-simulator`} component={withAdminAuth(StationSimulator)} />\n                            <Route path={`${this.props.match.path}/peek-database`} component={withAdminAuth(PeekDatabase)} />\n                        </Switch>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'\n\nexport default class LogOut extends Component {\n    componentDidMount() {\n        axios.get('/api/v1/admin/logout')\n    }\n    render() {\n        return (<Redirect to=\"/admin\" />);\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './components/admin/Login';\nimport Panel from './components/admin/Panel';\nimport LogOut from './components/admin/LogOut';\nimport withAdminAuth from './components/admin/withAdminAuth';\n\nexport default class AdminApp extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <Link to={`${this.props.match.url}/panel`} exact><a class=\"navbar-brand\" href=\"#\">CitiBoard Admins</a></Link>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n                    <ul class=\"navbar-nav mr-auto\">\n                        <li class=\"nav-item active\">\n                        <Link to={`${this.props.match.url}/logout`}><a class=\"nav-link\" href=\"#\">Logout</a></Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n            <Switch>\n                <Route path={`${this.props.match.path}/`} exact component={Login} />\n                <Route path={`${this.props.match.path}/panel`} component={withAdminAuth(Panel)} />\n                <Route path={`${this.props.match.path}/logout`} component={withAdminAuth(LogOut)} />\n            </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport Home from './components/user/Home';\nimport Profile from './components/user/Profile';\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\nimport withAuth from './components/user/withAuth';\nimport LogOut from './components/user/LogOut';\nimport Nav from './components/user/Nav';\nimport AdminApp from './AdminApp';\n\nexport default class App extends Component {\n    render() {\n        const AuthProfile = withAuth(Profile)\n        const AuthLogout = withAuth(LogOut)\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <Nav />\n                        <Home />\n                    </Route>\n                    <Route path=\"/login\" component={Login} >\n                        <Nav />\n                        <Login />\n                    </Route>\n                    <Route path=\"/register\">\n                        <Nav />\n                        <Register />\n                    </Route>\n                    <Route path=\"/profile\" >\n                        <Nav />\n                        < AuthProfile />\n                    </Route>\n                    <Route path=\"/logout\">\n                        <Nav/>\n                        < AuthLogout />\n                    </Route>\n                    <Route path=\"/admin\" component={AdminApp} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App-1.css';\nimport './extra-css.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}